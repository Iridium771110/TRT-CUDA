

sudo docker commit fe1bd070fa0c ros-noetic-img:cu118

sudo docker run -it --privileged --network=host --gpus all --memory 10000M --name ros-noetic-cu118 -e DISPLAY -e TERM -e QT_X11_NO_MITSHM=1 -v /home/dong/tmp_support:/root/workspace ros-noetic-img:cu118 bash

若出现 runtime 找不到nvidia或者无效
在/etc/docker/daemon.json添加
"runtimes": {
"nvidia": {
"path": "/usr/bin/nvidia-container-runtime",
"runtimeArgs": []
}
}

docker应当考虑将默认存储文件夹挂在大数据盘上
在/etc/docker/daemon.json添加
"data-root": "path"

orin上启动
sudo docker run -it --rm --net=host --runtime nvidia -e DISPLAY=$DISPLAY -v /tmp/.X11-unix/:/tmp/.X11-unix nvcr.io/nvidia/l4t-jetpack:r35.3.1

和宿主机共享网络以后，配置主从机ros-ip的时候直接使用宿主机ip即可
export ROS_MASTER_URI=http://主机ip:11311
export ROS_HOSTNAME=宿主ip

如果本地不存在jetson相关nvidia源，添加jetson相关源
deb https://repo.download.nvidia.com/jetson/common r35.1 main
deb https://repo.download.nvidia.com/jetson/t234 r35.1 main
deb https://repo.download.nvidia.com/jetson/ffmpeg r35.1 main
以后 gpg key 的更新
sudo apt-key adv --fetch-key https://repo.download.nvidia.com/jetson/jetson-ota-public.asc
之后正常 apt update

关于 jetson orin 上面的docker，如果一开始的docker没有驱动支持的，或者发生一系列 PTX-JIT not found, trt出现no implement 等遇到cuda文件可编译不可执行的情况
参考安装
FROM balenalib/jetson-xavier-ubuntu:bionic
ENV DEBIAN_FRONTEND noninteractive
WORKDIR /usr/src/app

# nvidia-l4t-core is a dependency for the rest
# of the packages, and is designed to be installed directly
# on the target device. This because it parses /proc/device-tree
# in the deb's .preinst script. Looks like we can bypass it though:
RUN \
    echo "deb https://repo.download.nvidia.com/jetson/common r32.4 main" >> /etc/apt/sources.list && \
    echo "deb https://repo.download.nvidia.com/jetson/t194 r32.4 main" >> /etc/apt/sources.list && \
    apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc && \
    mkdir -p /opt/nvidia/l4t-packages/ && \
    touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall && \
    apt-get update && \
    apt-get install -y --no-install-recommends nvidia-l4t-core
    apt-get install --no-install-recommends -y \
    nvidia-l4t-firmware \
    nvidia-l4t-multimedia-utils \
    nvidia-l4t-multimedia \
    nvidia-l4t-cuda \
    nvidia-l4t-x11 \
    nvidia-l4t-camera \
    nvidia-l4t-tools \
    nvidia-l4t-graphics-demos \
    nvidia-l4t-gstreamer \
    nvidia-l4t-jetson-io \
    nvidia-l4t-configs \
    nvidia-l4t-3d-core \
    nvidia-l4t-oem-config

ENV UDEV=1
CMD ["bash"]
若runtime=nvidia没有作用，/dev下的设备缺失nv设备，可以使用宿主机设备挂载方式
docker run -it --name XX \
    --device /dev/nvidia0:/dev/nvidia0 \
    --device /dev/nvidia1:/dev/nvidia1 \
    --device /dev/nvidia2:/dev/nvidia2 \
    --device /dev/nvidia3:/dev/nvidia3 \
    --device /dev/nvidiactl:/dev/nvidiactl \
    --device /dev/nvidia-uvm:/dev/nvidia-uvm \
    -v /pathto/nvidia:/usr/local/nvidia \
    -e LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64 \
    image_id /bin/bash
